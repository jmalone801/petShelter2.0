{"ast":null,"code":"var _jsxFileName = \"/Users/jamesmalone/Documents/Coding Stuff/Personal Projects/petShelter/client/src/components/DashBoard/PetList.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport background from \"../assets/petBackground.png\";\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport DashBoardNav from '../Nav/DashBoardNav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PetList = props => {\n  _s();\n\n  const [pets, setPets] = useState([]); // Displays all pets\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/pets/all').then(res => {\n      setPets(res.data);\n    }).catch(err => console.error(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DashBoardNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        backgroundImage: `url(${background})`,\n        backgroundRepeat: 'repeat',\n        marginTop: '50px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        sx: {\n          py: 8\n        },\n        maxWidth: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            margin: 2\n          },\n          children: \"These pets are looking for a new home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 4,\n          children: pets.map(pets => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                height: '100%',\n                display: 'flex',\n                flexDirection: 'column'\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                style: {\n                  height: '200px'\n                },\n                component: \"img\",\n                image: \"https://source.unsplash.com/random\",\n                alt: \"random\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"test\",\n                children: pets.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                sx: {\n                  flexGrow: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  gutterBottom: true,\n                  variant: \"h5\",\n                  component: \"h2\",\n                  children: pets.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: pets.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                style: {\n                  justifyContent: \"space-between\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  color: \"secondary\",\n                  size: \"small\",\n                  href: `/pet/` + pets._id,\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"secondary\",\n                  size: \"small\",\n                  href: `/pet/update/` + pets._id,\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, pets, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PetList, \"7RBAgWZCtqlXVpMU/6w9/5IUzu8=\");\n\n_c = PetList;\nexport default PetList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetList\");","map":{"version":3,"sources":["/Users/jamesmalone/Documents/Coding Stuff/Personal Projects/petShelter/client/src/components/DashBoard/PetList.jsx"],"names":["axios","React","useState","useEffect","background","Button","Card","CardActions","CardContent","CardMedia","Grid","Typography","Container","DashBoardNav","PetList","props","pets","setPets","get","then","res","data","catch","err","console","error","display","justifyContent","backgroundImage","backgroundRepeat","marginTop","py","margin","map","height","flexDirection","image","flexGrow","name","type","_id"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react'\nimport background from \"../assets/petBackground.png\";\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\n\nimport DashBoardNav from '../Nav/DashBoardNav';\n\n\nconst PetList = (props) => {\n    const [pets, setPets] = useState([]);\n\n\n    // Displays all pets\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/pets/all')\n            .then(res => {\n                setPets(res.data);\n            })\n            .catch(err => console.error(err));\n    }, []);\n\n\n    return (\n        <div>\n            <DashBoardNav />\n            <div style={{\n                display: 'flex',\n                justifyContent: 'center',\n                backgroundImage: `url(${background})`,\n                backgroundRepeat: 'repeat',\n                marginTop: '50px',\n            }}>\n            <Container sx={{ py: 8 }} maxWidth=\"md\">\n            <Typography variant=\"h6\" sx={{ margin: 2}}>\n                These pets are looking for a new home\n            </Typography>\n                <Grid container spacing={4}>\n                    {pets.map((pets) => (\n                        <Grid item key={pets} xs={12} sm={6} md={3}>\n                            <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n                                <CardMedia\n                                    style={{height: '200px'}}\n                                    component=\"img\"\n                                    image=\"https://source.unsplash.com/random\"\n                                    alt=\"random\"\n                                /><img alt='test'>{pets.image}</img>\n                                <CardContent sx={{ flexGrow: 1 }}>\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                        {pets.name}\n                                    </Typography>\n                                    <Typography>\n                                        {pets.type}\n                                    </Typography>\n                                </CardContent>\n                                <CardActions style={{ justifyContent: \"space-between\" }}>\n                                    <Button color=\"secondary\" size=\"small\" href={`/pet/` + pets._id}>View</Button>\n                                    <Button color=\"secondary\" size=\"small\" href={`/pet/update/` + pets._id}>Edit</Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Container>\n            </div>\n        </div>\n    );\n}\n\nexport default PetList;"]},"metadata":{},"sourceType":"module"}