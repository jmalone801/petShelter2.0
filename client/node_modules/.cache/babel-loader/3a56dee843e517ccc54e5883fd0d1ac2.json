{"ast":null,"code":"var _jsxFileName = \"/Users/jamesmalone/Documents/Coding Stuff/Personal Projects/petShelter/client/src/components/Nav/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport InputBase from '@mui/material/InputBase';\nimport { styled, alpha } from '@mui/material/styles';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = props => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const Search = styled('div')(_ref => {\n    let {\n      theme\n    } = _ref;\n    return {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: '40px',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto'\n      }\n    };\n  });\n  const SearchIconWrapper = styled('div')(_ref2 => {\n    let {\n      theme\n    } = _ref2;\n    return {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    };\n  });\n  const StyledInputBase = styled(InputBase)(_ref3 => {\n    let {\n      theme\n    } = _ref3;\n    return {\n      color: 'inherit',\n      '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create('width'),\n        width: '40px',\n        [theme.breakpoints.up('sm')]: {\n          width: '12ch',\n          '&:focus': {\n            width: '20ch'\n          }\n        }\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Search, {\n      children: [/*#__PURE__*/_jsxDEV(SearchIconWrapper, {\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(StyledInputBase, {\n        onChange: event => {\n          setSearchTerm(event.target.value);\n        },\n        placeholder: \"Search\\u2026\",\n        inputProps: {\n          'aria-label': 'search'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/jamesmalone/Documents/Coding Stuff/Personal Projects/petShelter/client/src/components/Nav/Search.jsx"],"names":["React","useState","InputBase","styled","alpha","SearchIcon","Search","props","searchTerm","setSearchTerm","theme","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","width","breakpoints","up","spacing","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","color","paddingLeft","transition","transitions","create","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport InputBase from '@mui/material/InputBase';\nimport { styled, alpha } from '@mui/material/styles';\nimport SearchIcon from '@mui/icons-material/Search';\n\n\nconst Search = (props) => {\n    const [searchTerm, setSearchTerm] = useState(\"\")\n\n    const Search = styled('div')(({ theme }) => ({\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '40px',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    }));\n    \n    const SearchIconWrapper = styled('div')(({ theme }) => ({\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }));\n    \n    const StyledInputBase = styled(InputBase)(({ theme }) => ({\n        color: 'inherit',\n        '& .MuiInputBase-input': {\n            padding: theme.spacing(1, 1, 1, 0),\n            paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n            transition: theme.transitions.create('width'),\n            width: '40px',\n            [theme.breakpoints.up('sm')]: {\n                width: '12ch',\n                '&:focus': {\n                    width: '20ch',\n                },\n            },\n        },\n    }));\n\n\n\n\n    return (\n        <div>\n                    <Search>\n                        <SearchIconWrapper>\n                            <SearchIcon />\n                        </SearchIconWrapper>\n                        <StyledInputBase\n                            onChange={(event) => {setSearchTerm(event.target.value)}}\n                            placeholder=\"Searchâ€¦\"\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </Search>\n        </div>\n\n    );\n};\n\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}