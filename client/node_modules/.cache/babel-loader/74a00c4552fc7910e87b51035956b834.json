{"ast":null,"code":"var _jsxFileName = \"/Users/jamesmalone/Documents/Coding Stuff/Personal Projects/petShelter/client/src/components/UpdateOne/Update.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router-dom\";\nimport background from \"../assets/petBackground.png\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { Paper } from '@mui/material';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Backdrop from '@mui/material/Backdrop';\nimport FormNav from '../Nav/FormNav';\nimport Footer from '../Footer/footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Update = props => {\n  _s();\n\n  const {\n    _id\n  } = useParams();\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [skillOne, setSkillOne] = useState(\"\");\n  const [skillTwo, setSkillTwo] = useState(\"\");\n  const [skillThree, setSkillThree] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [image, setImage] = useState(null);\n  const [cloudinary_id, setCloudinary_id] = useState(null);\n  const [spinner, setSpinner] = useState(true);\n  const [errors, setErrors] = useState({});\n  const history = useHistory(); // Retrieves one single pet by id\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/pet/' + _id).then(res => {\n      setName(res.data.name);\n      setType(res.data.type);\n      setDescription(res.data.description);\n      setSkillOne(res.data.skillOne);\n      setSkillTwo(res.data.skillTwo);\n      setSkillThree(res.data.skillThree);\n      setImage(res.data.image);\n    }).catch(err => console.error(err));\n  }, [_id]); // Handles image preview\n\n  const handleOnChange = event => {\n    const reader = new FileReader();\n\n    reader.onload = function (onLoadEvent) {\n      setFile(onLoadEvent.target.result);\n      setImage(null);\n      setCloudinary_id(null);\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n  }; // Updates one single pet by id\n\n\n  const updatePet = async event => {\n    event.preventDefault(); // Checks if user uploaded a file\n    // If user did upload a file, it POSTs both Axios calls\n\n    if (file != null) {\n      // Sets up image to be sent to Cloudinary\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('upload_preset', 'petShelter'); // Uploading the image to Cloudinary\n\n      const result = await axios.post('https://api.cloudinary.com/v1_1/jamescloudinaryforphotos/upload', formData); // Packages data to send into database\n\n      const imageData = {\n        image: result.data.secure_url,\n        cloudinary_id: result.data.public_id\n      };\n      axios.put('http://localhost:8000/api/pet/update/' + _id, {\n        name,\n        type,\n        description,\n        skillOne,\n        skillTwo,\n        skillThree,\n        ...imageData\n      }) // Displays validiations for edit\n      .then(res => {\n        console.log(res);\n\n        if (res.data.errors) {\n          setErrors(res.data.errors);\n        } else {\n          history.push(\"/\");\n        }\n      }).catch(err => console.log(err));\n    } else {\n      axios.put('http://localhost:8000/api/pet/update/' + _id, {\n        name,\n        type,\n        description,\n        skillOne,\n        skillTwo,\n        skillThree\n      }) // Displays validiations for edit\n      .then(res => {\n        console.log(res);\n\n        if (res.data.errors) {\n          setErrors(res.data.errors);\n        } else {\n          history.push(\"/\");\n        }\n      }).catch(err => console.log(err));\n      console.log(image);\n      console.log(cloudinary_id);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        backgroundImage: `url(${background})`,\n        backgroundRepeat: 'repeat',\n        marginTop: '60px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: '40px',\n            marginBottom: '20px',\n            fontWeight: 'bold'\n          },\n          children: [\"Make changes to \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          style: {\n            width: '600px',\n            padding: 20,\n            marginBottom: '100px',\n            backgroundColor: \"rgb(247 247 247 / 87%)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: updatePet,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-between',\n                columnGap: '80px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: \"Pet Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Pet Name\",\n                type: \"text\",\n                variant: \"filled\",\n                fullWidth: true,\n                onChange: event => setName(event.target.value),\n                value: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"danger\",\n                children: errors.name ? errors.name.message : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Pet Type\",\n                type: \"text\",\n                variant: \"filled\",\n                fullWidth: true,\n                onChange: event => setType(event.target.value),\n                value: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"danger\",\n                children: errors.type ? errors.type.message : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Pet Description\",\n                type: \"text\",\n                variant: \"filled\",\n                multiline: true,\n                rows: 4,\n                fullWidth: true,\n                onChange: event => setDescription(event.target.value),\n                value: description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"danger\",\n                children: errors.description ? errors.description.message : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: [\"Pet Skills \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'grey'\n                  },\n                  children: \"(Optional)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 78\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Skill One\",\n                type: \"text\",\n                variant: \"filled\",\n                fullWidth: true,\n                onChange: event => setSkillOne(event.target.value),\n                value: skillOne\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Skill Two\",\n                type: \"text\",\n                variant: \"filled\",\n                fullWidth: true,\n                onChange: event => setSkillTwo(event.target.value),\n                value: skillTwo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Skill Three\",\n                type: \"text\",\n                variant: \"filled\",\n                fullWidth: true,\n                onChange: event => setSkillThree(event.target.value),\n                value: skillThree\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"image\",\n                name: \"image\",\n                onChange: handleOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: image || file || 'https://res.cloudinary.com/jamescloudinaryforphotos/image/upload/v1660004528/petShelterUploads/stmfyh6uzxkt2bmqf01l.png',\n                  alt: \"Preview\",\n                  style: {\n                    width: '200px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  href: \"/\",\n                  variant: \"text\",\n                  style: {\n                    color: 'grey'\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  style: {\n                    backgroundColor: 'rgb(248, 181, 161)',\n                    width: '140px'\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 37\n                }, this), spinner ? spinner : /*#__PURE__*/_jsxDEV(Backdrop, {\n                  style: {\n                    color: '#fff'\n                  },\n                  open: true,\n                  children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    color: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Update, \"+hkgVmVlfhsA3BdYLLswN3DwSWg=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["/Users/jamesmalone/Documents/Coding Stuff/Personal Projects/petShelter/client/src/components/UpdateOne/Update.jsx"],"names":["axios","React","useEffect","useState","useParams","useHistory","background","Button","TextField","Paper","CircularProgress","Backdrop","FormNav","Footer","Update","props","_id","name","setName","type","setType","description","setDescription","skillOne","setSkillOne","skillTwo","setSkillTwo","skillThree","setSkillThree","file","setFile","image","setImage","cloudinary_id","setCloudinary_id","spinner","setSpinner","errors","setErrors","history","get","then","res","data","catch","err","console","error","handleOnChange","event","reader","FileReader","onload","onLoadEvent","target","result","readAsDataURL","files","updatePet","preventDefault","formData","FormData","append","post","imageData","secure_url","public_id","put","log","push","display","justifyContent","backgroundImage","backgroundRepeat","marginTop","marginBottom","fontWeight","width","padding","backgroundColor","flexDirection","columnGap","textAlign","value","message","color"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from \"react-router-dom\";\nimport background from \"../assets/petBackground.png\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { Paper } from '@mui/material';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Backdrop from '@mui/material/Backdrop';\nimport FormNav from '../Nav/FormNav';\nimport Footer from '../Footer/footer';\n\n\nconst Update = (props) => {\n    const { _id } = useParams();\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skillOne, setSkillOne] = useState(\"\");\n    const [skillTwo, setSkillTwo] = useState(\"\");\n    const [skillThree, setSkillThree] = useState(\"\");\n    const [file, setFile] = useState(null);\n    const [image, setImage] = useState(null);\n    const [cloudinary_id, setCloudinary_id] = useState(null);\n    const [spinner, setSpinner] = useState(true);\n    const [errors, setErrors] = useState({});\n    const history = useHistory();\n\n    // Retrieves one single pet by id\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/pet/' + _id)\n            .then(res => {\n                setName(res.data.name);\n                setType(res.data.type);\n                setDescription(res.data.description);\n                setSkillOne(res.data.skillOne);\n                setSkillTwo(res.data.skillTwo);\n                setSkillThree(res.data.skillThree);\n                setImage(res.data.image)\n            })\n            .catch(err => console.error(err));\n    }, [_id]);\n\n        // Handles image preview\n        const handleOnChange = (event) => {\n            const reader = new FileReader();\n            reader.onload = function (onLoadEvent) {\n                setFile(onLoadEvent.target.result);\n                setImage(null)\n                setCloudinary_id(null)\n            }\n            reader.readAsDataURL(event.target.files[0]);\n        }\n\n\n    // Updates one single pet by id\n    const updatePet = async (event) => {\n        event.preventDefault();\n\n                // Checks if user uploaded a file\n        // If user did upload a file, it POSTs both Axios calls\n        if (file != null) {\n            // Sets up image to be sent to Cloudinary\n            const formData = new FormData();\n            formData.append('file', file)\n            formData.append('upload_preset', 'petShelter')\n            // Uploading the image to Cloudinary\n            const result = await axios.post('https://api.cloudinary.com/v1_1/jamescloudinaryforphotos/upload', formData)\n\n            // Packages data to send into database\n            const imageData = {\n                image: result.data.secure_url,\n                cloudinary_id: result.data.public_id\n            }\n\n\n        axios.put('http://localhost:8000/api/pet/update/' + _id, {\n            name,\n            type,\n            description,\n            skillOne,\n            skillTwo,\n            skillThree,\n            ...imageData\n        })\n            // Displays validiations for edit\n            .then(res => {\n                console.log(res)\n                if (res.data.errors) {\n                    setErrors(res.data.errors)\n                }\n                else {\n                    history.push(\"/\")\n                }\n            })\n            .catch(err => console.log(err))\n    } else {\n        axios.put('http://localhost:8000/api/pet/update/' + _id, {\n            name,\n            type,\n            description,\n            skillOne,\n            skillTwo,\n            skillThree\n        })\n            // Displays validiations for edit\n            .then(res => {\n                console.log(res)\n                if (res.data.errors) {\n                    setErrors(res.data.errors)\n                }\n                else {\n                    history.push(\"/\")\n                }\n            })\n            .catch(err => console.log(err))\n            console.log(image)\n            console.log(cloudinary_id)\n        }\n    }\n\n    return (\n        <div>\n            <FormNav />\n            <div style={{\n                display: 'flex',\n                justifyContent: 'center',\n                backgroundImage: `url(${background})`,\n                backgroundRepeat: 'repeat',\n                marginTop: '60px',\n            }}>\n\n                <div>\n                    <h3 style={{ marginTop: '40px', marginBottom: '20px', fontWeight: 'bold' }}>Make changes to {name}</h3>\n                    <Paper\n                        elevation={2}\n                        style={{\n                            width: '600px',\n                            padding: 20,\n                            marginBottom: '100px',\n                            backgroundColor: \"rgb(247 247 247 / 87%)\"\n                        }}>\n                        <form onSubmit={updatePet}>\n                            <div style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                justifyContent: 'space-between',\n                                columnGap: '80px'\n                            }} >\n                                <h5 style={{ textAlign: 'left' }}>Pet Information</h5>\n                                <TextField\n                                    label=\"Pet Name\"\n                                    type=\"text\"\n                                    variant=\"filled\"\n                                    fullWidth\n                                    onChange={(event) => setName(event.target.value)} value={name} />\n                                <p className='danger'>{errors.name ? errors.name.message : \"\"}</p>\n                                <TextField\n                                    label=\"Pet Type\"\n                                    type=\"text\" variant=\"filled\"\n                                    fullWidth\n                                    onChange={(event) => setType(event.target.value)} value={type} />\n                                <p className='danger'>{errors.type ? errors.type.message : \"\"}</p>\n                                <TextField\n                                    label=\"Pet Description\"\n                                    type=\"text\"\n                                    variant=\"filled\"\n                                    multiline\n                                    rows={4}\n                                    fullWidth\n                                    onChange={(event) => setDescription(event.target.value)} value={description} />\n                                <p className='danger'>{errors.description ? errors.description.message : \"\"}</p>\n                                <hr />\n                                <h5 style={{ textAlign: 'left' }}>Pet Skills <span style={{ color: 'grey' }} >(Optional)</span></h5>\n                                <TextField\n                                    label=\"Skill One\"\n                                    type=\"text\"\n                                    variant=\"filled\"\n                                    fullWidth\n                                    onChange={(event) => setSkillOne(event.target.value)} value={skillOne} />\n                                <p></p>\n                                <TextField\n                                    label=\"Skill Two\"\n                                    type=\"text\"\n                                    variant=\"filled\"\n                                    fullWidth\n                                    onChange={(event) => setSkillTwo(event.target.value)} value={skillTwo} />\n                                <p></p>\n                                <TextField\n                                    label=\"Skill Three\"\n                                    type=\"text\"\n                                    variant=\"filled\"\n                                    fullWidth\n                                    onChange={(event) => setSkillThree(event.target.value)} value={skillThree} />\n                                <p></p>\n\n                                <input\n                                    type=\"file\"\n                                    id=\"image\"\n                                    name=\"image\"\n                                    onChange={handleOnChange}\n                                />\n                                <br></br>\n\n                                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                                    <img src={image || file || 'https://res.cloudinary.com/jamescloudinaryforphotos/image/upload/v1660004528/petShelterUploads/stmfyh6uzxkt2bmqf01l.png'}\n                                        alt=\"Preview\"\n                                        style={{ width: '200px' }}\n                                    />\n                                </div>\n\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <Button\n                                        href=\"/\"\n                                        variant=\"text\"\n                                        style={{ color: 'grey' }}>Cancel\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        style={{ backgroundColor: 'rgb(248, 181, 161)', width: '140px' }}>Submit\n                                    </Button>\n                                    {spinner ? spinner : <Backdrop style={{ color: '#fff', }}  open>\n                                        <CircularProgress color=\"inherit\" />\n                                    </Backdrop>}\n                                </div>\n                            </div>\n                        </form>\n                    </Paper>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    )\n\n\n}\nexport default Update;"]},"metadata":{},"sourceType":"module"}