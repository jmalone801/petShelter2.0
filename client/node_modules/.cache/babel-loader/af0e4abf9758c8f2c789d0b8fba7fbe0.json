{"ast":null,"code":"var _jsxFileName = \"/Users/jamesmalone/Documents/Coding Stuff/Personal Projects/petShelter/client/src/components/Form/PetForm.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport background from \"../assets/petBackground.png\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { Paper } from '@mui/material';\nimport FormNav from '../Nav/FormNav';\nimport Footer from '../Footer/footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PetForm = props => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [skillOne, setSkillOne] = useState(\"\");\n  const [skillTwo, setSkillTwo] = useState(\"\");\n  const [skillThree, setSkillThree] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const history = useHistory();\n  const [fileInputState, setFileInputState] = useState('');\n  const [previewSource, setPreviewSource] = useState('');\n  const [selectedFile, setSelectedFile] = useState();\n  const [successMsg, setSuccessMsg] = useState('');\n  const [errMsg, setErrMsg] = useState(''); //handler when the form is submitted\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    axios.post('http://localhost:8000/api/pets/new', {\n      name,\n      type,\n      description,\n      skillOne,\n      skillTwo,\n      skillThree\n    }) // Displays validiations\n    .then(res => {\n      console.log(res);\n\n      if (res.data.errors) {\n        setErrors(res.data.errors);\n      } // Clears input fields\n      else {\n        setName(\"\");\n        setType(\"\");\n        setDescription(\"\");\n        setSkillOne(\"\");\n        setSkillTwo(\"\");\n        setSkillThree(\"\");\n        setErrors(\"\");\n        history.push(\"/\");\n      }\n    }).catch(err => console.log(err));\n  }; // test ======================================================\n\n\n  const handleFileInputChange = e => {\n    const file = e.target.files[0];\n    previewFile(file);\n    setSelectedFile(file);\n    setFileInputState(e.target.value);\n  };\n\n  const previewFile = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const handleSubmitFile = e => {\n    e.preventDefault();\n    if (!selectedFile) return;\n    const reader = new FileReader();\n    reader.readAsDataURL(selectedFile);\n\n    reader.onloadend = () => {\n      uploadImage(reader.result);\n    };\n\n    reader.onerror = () => {\n      console.error('AHHHHHHHH!!');\n      setErrMsg('something went wrong!');\n    };\n  };\n\n  const uploadImage = async base64EncodedImage => {\n    try {\n      await fetch('/api/upload', {\n        method: 'POST',\n        body: JSON.stringify({\n          data: base64EncodedImage\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setFileInputState('');\n      setPreviewSource('');\n      setSuccessMsg('Image uploaded successfully');\n    } catch (err) {\n      console.error(err);\n      setErrMsg('Something went wrong!');\n    }\n  }; // test ======================================================\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        backgroundImage: `url(${background})`,\n        backgroundRepeat: 'repeat',\n        marginTop: '60px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: '40px',\n            marginBottom: '20px',\n            fontWeight: 'bold'\n          },\n          children: \"Know a pet in need of a good home?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          style: {\n            width: '600px',\n            padding: 20,\n            marginBottom: '100px',\n            backgroundColor: \"rgb(247 247 247 / 87%)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: onSubmitHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-between',\n                columnGap: '80px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: \"Pet Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Pet Name\",\n                type: \"text\",\n                variant: \"filled\",\n                fullWidth: true,\n                onChange: event => setName(event.target.value),\n                value: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"danger\",\n                children: errors.name ? errors.name.message : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Pet Type\",\n                type: \"text\",\n                variant: \"filled\",\n                fullWidth: true,\n                onChange: event => setType(event.target.value),\n                value: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"danger\",\n                children: errors.type ? errors.type.message : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Pet Description\",\n                type: \"text\",\n                variant: \"filled\",\n                multiline: true,\n                rows: 4,\n                fullWidth: true,\n                onChange: event => setDescription(event.target.value),\n                value: description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"danger\",\n                children: errors.description ? errors.description.message : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: [\"Pet Skills \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'grey'\n                  },\n                  children: \"(Optional)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 78\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Skill One\",\n                type: \"text\",\n                variant: \"filled\",\n                fullWidth: true,\n                onChange: event => setSkillOne(event.target.value),\n                value: skillOne\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Skill Two\",\n                type: \"text\",\n                variant: \"filled\",\n                fullWidth: true,\n                onChange: event => setSkillTwo(event.target.value),\n                value: skillTwo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Skill Three\",\n                type: \"text\",\n                variant: \"filled\",\n                fullWidth: true,\n                onChange: event => setSkillThree(event.target.value),\n                value: skillThree\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"fileInput\",\n                type: \"file\",\n                name: \"image\",\n                onChange: handleFileInputChange,\n                value: fileInputState,\n                className: \"form-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  href: \"/\",\n                  variant: \"text\",\n                  style: {\n                    color: 'grey'\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  style: {\n                    backgroundColor: 'rgb(248, 181, 161)',\n                    width: '140px'\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), previewSource && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: previewSource,\n              alt: \"chosen\",\n              style: {\n                height: '300px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PetForm, \"3BOiXmEUl+sGYJaQFI1S4/QoEi8=\", false, function () {\n  return [useHistory];\n});\n\n_c = PetForm;\nexport default PetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetForm\");","map":{"version":3,"sources":["/Users/jamesmalone/Documents/Coding Stuff/Personal Projects/petShelter/client/src/components/Form/PetForm.jsx"],"names":["axios","React","useState","useHistory","background","Button","TextField","Paper","FormNav","Footer","PetForm","props","name","setName","type","setType","description","setDescription","skillOne","setSkillOne","skillTwo","setSkillTwo","skillThree","setSkillThree","errors","setErrors","history","fileInputState","setFileInputState","previewSource","setPreviewSource","selectedFile","setSelectedFile","successMsg","setSuccessMsg","errMsg","setErrMsg","onSubmitHandler","event","preventDefault","post","then","res","console","log","data","push","catch","err","handleFileInputChange","e","file","target","files","previewFile","value","reader","FileReader","readAsDataURL","onloadend","result","handleSubmitFile","uploadImage","onerror","error","base64EncodedImage","fetch","method","body","JSON","stringify","headers","display","justifyContent","backgroundImage","backgroundRepeat","marginTop","marginBottom","fontWeight","width","padding","backgroundColor","flexDirection","columnGap","textAlign","message","color","height"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport background from \"../assets/petBackground.png\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { Paper } from '@mui/material';\nimport FormNav from '../Nav/FormNav';\nimport Footer from '../Footer/footer';\n\n\nconst PetForm = (props) => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skillOne, setSkillOne] = useState(\"\");\n    const [skillTwo, setSkillTwo] = useState(\"\");\n    const [skillThree, setSkillThree] = useState(\"\");\n    const [errors, setErrors] = useState({});\n    const history = useHistory();\n\n    const [fileInputState, setFileInputState] = useState('');\n    const [previewSource, setPreviewSource] = useState('');\n    const [selectedFile, setSelectedFile] = useState();\n    const [successMsg, setSuccessMsg] = useState('');\n    const [errMsg, setErrMsg] = useState('');\n\n\n    //handler when the form is submitted\n    const onSubmitHandler = event => {\n        event.preventDefault();\n\n        axios.post('http://localhost:8000/api/pets/new', {\n            name,\n            type,\n            description,\n            skillOne,\n            skillTwo,\n            skillThree\n        })\n            // Displays validiations\n            .then(res => {\n                console.log(res)\n                if (res.data.errors) {\n                    setErrors(res.data.errors)\n                }\n                // Clears input fields\n                else {\n                    setName(\"\")\n                    setType(\"\")\n                    setDescription(\"\")\n                    setSkillOne(\"\")\n                    setSkillTwo(\"\")\n                    setSkillThree(\"\")\n                    setErrors(\"\")\n                    history.push(\"/\")\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    // test ======================================================\n    const handleFileInputChange = (e) => {\n        const file = e.target.files[0];\n        previewFile(file);\n        setSelectedFile(file);\n        setFileInputState(e.target.value);\n    };\n\n    const previewFile = (file) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            setPreviewSource(reader.result);\n        };\n    };\n\n    const handleSubmitFile = (e) => {\n        e.preventDefault();\n        if (!selectedFile) return;\n        const reader = new FileReader();\n        reader.readAsDataURL(selectedFile);\n        reader.onloadend = () => {\n            uploadImage(reader.result);\n        };\n        reader.onerror = () => {\n            console.error('AHHHHHHHH!!');\n            setErrMsg('something went wrong!');\n        };\n    };\n\n    const uploadImage = async (base64EncodedImage) => {\n        try {\n            await fetch('/api/upload', {\n                method: 'POST',\n                body: JSON.stringify({ data: base64EncodedImage }),\n                headers: { 'Content-Type': 'application/json' },\n            });\n            setFileInputState('');\n            setPreviewSource('');\n            setSuccessMsg('Image uploaded successfully');\n        } catch (err) {\n            console.error(err);\n            setErrMsg('Something went wrong!');\n        }\n    };\n    // test ======================================================\n\n\n\n    return (\n        <div>\n            <FormNav />\n            <div style={{\n                display: 'flex',\n                justifyContent: 'center',\n                backgroundImage: `url(${background})`,\n                backgroundRepeat: 'repeat',\n                marginTop: '60px',\n            }}>\n\n                <div>\n                    <h3 style={{ marginTop: '40px', marginBottom: '20px', fontWeight: 'bold' }}>Know a pet in need of a good home?</h3>\n                    <Paper\n                        elevation={2}\n                        style={{\n                            width: '600px',\n                            padding: 20,\n                            marginBottom: '100px',\n                            backgroundColor: \"rgb(247 247 247 / 87%)\"\n                        }}>\n                        <form onSubmit={onSubmitHandler}>\n                            <div style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                justifyContent: 'space-between',\n                                columnGap: '80px'\n                            }} >\n                                <h5 style={{ textAlign: 'left' }}>Pet Information</h5>\n                                <TextField\n                                    label=\"Pet Name\"\n                                    type=\"text\"\n                                    variant=\"filled\"\n                                    fullWidth\n                                    onChange={(event) => setName(event.target.value)} value={name} />\n                                <p className='danger'>{errors.name ? errors.name.message : \"\"}</p>\n                                <TextField\n                                    label=\"Pet Type\"\n                                    type=\"text\" variant=\"filled\"\n                                    fullWidth\n                                    onChange={(event) => setType(event.target.value)} value={type} />\n                                <p className='danger'>{errors.type ? errors.type.message : \"\"}</p>\n                                <TextField\n                                    label=\"Pet Description\"\n                                    type=\"text\"\n                                    variant=\"filled\"\n                                    multiline\n                                    rows={4}\n                                    fullWidth\n                                    onChange={(event) => setDescription(event.target.value)} value={description} />\n                                <p className='danger'>{errors.description ? errors.description.message : \"\"}</p>\n                                <hr />\n                                <h5 style={{ textAlign: 'left' }}>Pet Skills <span style={{ color: 'grey' }} >(Optional)</span></h5>\n                                <TextField\n                                    label=\"Skill One\"\n                                    type=\"text\"\n                                    variant=\"filled\"\n                                    fullWidth\n                                    onChange={(event) => setSkillOne(event.target.value)} value={skillOne} />\n                                <p></p>\n                                <TextField\n                                    label=\"Skill Two\"\n                                    type=\"text\"\n                                    variant=\"filled\"\n                                    fullWidth\n                                    onChange={(event) => setSkillTwo(event.target.value)} value={skillTwo} />\n                                <p></p>\n                                <TextField\n                                    label=\"Skill Three\"\n                                    type=\"text\"\n                                    variant=\"filled\"\n                                    fullWidth\n                                    onChange={(event) => setSkillThree(event.target.value)} value={skillThree} />\n                                <p></p>\n\n                                <input\n                                    id=\"fileInput\"\n                                    type=\"file\"\n                                    name=\"image\"\n                                    onChange={handleFileInputChange}\n                                    value={fileInputState}\n                                    className=\"form-input\"\n                                />\n\n                                <br></br>\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <Button\n                                        href=\"/\"\n                                        variant=\"text\"\n                                        style={{ color: 'grey' }}>Cancel\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        style={{ backgroundColor: 'rgb(248, 181, 161)', width: '140px' }}>Submit\n                                    </Button>\n                                </div>\n                            </div>\n                            {previewSource && (\n                                <img\n                                    src={previewSource}\n                                    alt=\"chosen\"\n                                    style={{ height: '300px' }}\n                                />\n                            )}\n                        </form>\n                    </Paper>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default PetForm;"]},"metadata":{},"sourceType":"module"}