{"ast":null,"code":"var _jsxFileName = \"/Users/jamesmalone/Documents/Coding Stuff/Personal Projects/petShelter/client/src/components/Form/PetForm.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { Paper } from '@mui/material';\nimport FormNav from '../Nav/FormNav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PetForm = props => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [skillOne, setSkillOne] = useState(\"\");\n  const [skillTwo, setSkillTwo] = useState(\"\");\n  const [skillThree, setSkillThree] = useState(\"\");\n  const [image, setImage] = useState();\n  const [errors, setErrors] = useState({});\n  const history = useHistory(); //handler when the form is submitted\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    axios.post('http://localhost:8000/api/pets/new', {\n      name,\n      type,\n      description,\n      skillOne,\n      skillTwo,\n      skillThree,\n      image\n    }) // Displays validiations\n    .then(res => {\n      console.log(res);\n\n      if (res.data.errors) {\n        setErrors(res.data.errors);\n      } // Clears input fields\n      else {\n        setName(\"\");\n        setType(\"\");\n        setDescription(\"\");\n        setSkillOne(\"\");\n        setSkillTwo(\"\");\n        setSkillThree(\"\");\n        setErrors(\"\");\n        history.push(\"/\");\n      }\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginTop: '100px'\n      },\n      children: \"Know a pet needing a home?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: \"span\",\n        sx: {\n          width: '600px',\n          border: '2px black'\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          style: {\n            padding: 20,\n            backgroundColor: \"rgb(247 247 247 / 87%)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: onSubmitHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              style: {\n                textAlign: 'left'\n              },\n              children: \"Pet Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Pet Name\",\n              type: \"text\",\n              variant: \"filled\",\n              fullWidth: true,\n              onChange: event => setName(event.target.value),\n              value: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"danger\",\n              children: errors.name ? errors.name.message : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Pet Type\",\n              type: \"text\",\n              variant: \"filled\",\n              fullWidth: true,\n              onChange: event => setType(event.target.value),\n              value: type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"danger\",\n              children: errors.type ? errors.type.message : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Pet Description\",\n              type: \"text\",\n              variant: \"filled\",\n              multiline: true,\n              rows: 4,\n              fullWidth: true,\n              onChange: event => setDescription(event.target.value),\n              value: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"danger\",\n              children: errors.description ? errors.description.message : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              style: {\n                textAlign: 'left'\n              },\n              children: \"Pet Skills (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Skill One\",\n              type: \"text\",\n              variant: \"filled\",\n              fullWidth: true,\n              onChange: event => setSkillOne(event.target.value),\n              value: skillOne\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 170\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 179\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Skill Two\",\n              type: \"text\",\n              variant: \"filled\",\n              fullWidth: true,\n              onChange: event => setSkillTwo(event.target.value),\n              value: skillTwo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 170\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 179\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Skill Three\",\n              type: \"text\",\n              variant: \"filled\",\n              fullWidth: true,\n              onChange: event => setSkillThree(event.target.value),\n              value: skillThree\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 176\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 185\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"myImage\",\n              onChange: event => {\n                console.log(event.target.files[0]);\n                setImage(event.target.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 40\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              style: {\n                justifyContent: 'right'\n              },\n              className: \"btn btn-success\",\n              variant: \"contained\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PetForm, \"yo5Cil2JKlsl4kNEPlLmbIiqHAg=\", false, function () {\n  return [useHistory];\n});\n\n_c = PetForm;\nexport default PetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetForm\");","map":{"version":3,"sources":["/Users/jamesmalone/Documents/Coding Stuff/Personal Projects/petShelter/client/src/components/Form/PetForm.jsx"],"names":["axios","React","useState","useHistory","Button","Box","TextField","Paper","FormNav","PetForm","props","name","setName","type","setType","description","setDescription","skillOne","setSkillOne","skillTwo","setSkillTwo","skillThree","setSkillThree","image","setImage","errors","setErrors","history","onSubmitHandler","event","preventDefault","post","then","res","console","log","data","push","catch","err","marginTop","display","justifyContent","width","border","padding","backgroundColor","textAlign","target","value","message","files"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { Paper } from '@mui/material';\n\nimport FormNav from '../Nav/FormNav';\n\n\nconst PetForm = (props) => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skillOne, setSkillOne] = useState(\"\");\n    const [skillTwo, setSkillTwo] = useState(\"\");\n    const [skillThree, setSkillThree] = useState(\"\");\n    const [image, setImage] = useState();\n    const [errors, setErrors] = useState({});\n    const history = useHistory();\n\n\n    //handler when the form is submitted\n    const onSubmitHandler = event => {\n        event.preventDefault();\n\n        axios.post('http://localhost:8000/api/pets/new', {\n            name,\n            type,\n            description,\n            skillOne,\n            skillTwo,\n            skillThree,\n            image\n        })\n            // Displays validiations\n            .then(res => {\n                console.log(res)\n                if (res.data.errors) {\n                    setErrors(res.data.errors)\n                }\n                // Clears input fields\n                else {\n                    setName(\"\")\n                    setType(\"\")\n                    setDescription(\"\")\n                    setSkillOne(\"\")\n                    setSkillTwo(\"\")\n                    setSkillThree(\"\")\n                    setErrors(\"\")\n                    history.push(\"/\")\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    return (\n        <div>\n            <FormNav />\n            <h3 style={{ marginTop: '100px' }}>Know a pet needing a home?</h3>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Box\n                    component=\"span\"\n                    sx={{\n                        width: '600px',\n                        border: '2px black'\n                    }}\n                >\n                    <Paper elevation={2} style={{ padding: 20, backgroundColor: \"rgb(247 247 247 / 87%)\" }}>\n                        <form onSubmit={onSubmitHandler}>\n                            <h6 style={{ textAlign: 'left' }}>Pet Information</h6>\n                            <TextField label=\"Pet Name\" type=\"text\" variant=\"filled\" fullWidth onChange={(event) => setName(event.target.value)} value={name} />\n                            <p className='danger'>{errors.name ? errors.name.message : \"\"}</p>\n                            <TextField label=\"Pet Type\" type=\"text\" variant=\"filled\" fullWidth onChange={(event) => setType(event.target.value)} value={type} />\n                            <p className='danger'>{errors.type ? errors.type.message : \"\"}</p>\n                            <TextField label=\"Pet Description\" type=\"text\" variant=\"filled\" multiline rows={4} fullWidth onChange={(event) => setDescription(event.target.value)} value={description} />\n                            <p className='danger'>{errors.description ? errors.description.message : \"\"}</p>\n                            <hr />\n                            <h6 style={{ textAlign: 'left' }}>Pet Skills (Optional)</h6>\n                            <TextField label=\"Skill One\" type=\"text\" variant=\"filled\" fullWidth onChange={(event) => setSkillOne(event.target.value)} value={skillOne} /><br></br><br></br>\n                            <TextField label=\"Skill Two\" type=\"text\" variant=\"filled\" fullWidth onChange={(event) => setSkillTwo(event.target.value)} value={skillTwo} /><br></br><br></br>\n                            <TextField label=\"Skill Three\" type=\"text\" variant=\"filled\" fullWidth onChange={(event) => setSkillThree(event.target.value)} value={skillThree} /><br></br><br></br>\n                            <input\n                                type=\"file\"\n                                name=\"myImage\"\n                                onChange={(event) => {\n                                    console.log(event.target.files[0]);\n                                    setImage(event.target.files[0]);\n                                }}\n                            /><br></br><br></br>\n                            <Button type=\"submit\" style={{ justifyContent: 'right' }} className=\"btn btn-success\" variant=\"contained\" >Submit</Button>\n                        </form>\n                    </Paper>\n                </Box>\n            </div>\n        </div>\n    )\n}\n\nexport default PetForm;"]},"metadata":{},"sourceType":"module"}