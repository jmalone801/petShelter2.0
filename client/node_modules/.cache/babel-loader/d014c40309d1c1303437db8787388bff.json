{"ast":null,"code":"var _jsxFileName = \"/Users/jamesmalone/Documents/Coding Stuff/Personal Projects/petShelter/client/src/components/Form/PetForm.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport background from \"../assets/petBackground.png\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { Paper } from '@mui/material';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Backdrop from '@mui/material/Backdrop';\nimport FormNav from '../Nav/FormNav';\nimport Footer from '../Footer/footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PetForm = props => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [skillOne, setSkillOne] = useState(\"\");\n  const [skillTwo, setSkillTwo] = useState(\"\");\n  const [skillThree, setSkillThree] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [image, setImage] = useState(null);\n  const [cloudinary_id, setCloudinary_id] = useState(null);\n  const [errors, setErrors] = useState({});\n  const [spinner, setSpinner] = useState(true);\n  const history = useHistory(); // Handles image preview\n\n  const handleOnChange = event => {\n    const reader = new FileReader();\n\n    reader.onload = function (onLoadEvent) {\n      setFile(onLoadEvent.target.result);\n      setImage(null);\n      setCloudinary_id(null);\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n  }; //handler when the form is submitted\n\n\n  const onSubmitHandler = async event => {\n    event.preventDefault(); // Checks if user uploaded a file\n    // If user did upload a file, it POSTs both Axios calls\n\n    if (file != null) {\n      // Starts spinner\n      setSpinner(false); // Sets up image to be sent to Cloudinary\n\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('upload_preset', 'petShelter'); // Uploading the image to Cloudinary\n\n      const result = await axios.post('https://api.cloudinary.com/v1_1/jamescloudinaryforphotos/upload', formData); // Packages data to send into database\n\n      const imageData = {\n        image: result.data.secure_url,\n        cloudinary_id: result.data.public_id\n      }; // Sends all data to database\n\n      axios.post('http://localhost:8000/api/pets/new', {\n        name,\n        type,\n        description,\n        skillOne,\n        skillTwo,\n        skillThree,\n        ...imageData\n      }) // console.log(imageData)\n      // Displays validiations\n      .then(res => {\n        console.log(res);\n\n        if (res.data.errors) {\n          setErrors(res.data.errors);\n        } // Clears input fields\n        else {\n          setName(\"\");\n          setType(\"\");\n          setDescription(\"\");\n          setSkillOne(\"\");\n          setSkillTwo(\"\");\n          setSkillThree(\"\");\n          setErrors(\"\");\n          history.push(\"/\");\n        }\n      }).catch(err => console.log(err)); // Stops spinner\n\n      setSpinner(true); // If user did NOT upload file, it only POSTs the following Axios call\n    } else {\n      // Sends all data to database\n      axios.post('http://localhost:8000/api/pets/new', {\n        name,\n        type,\n        description,\n        skillOne,\n        skillTwo,\n        skillThree\n      }) // Displays validiations\n      .then(res => {\n        console.log(res);\n\n        if (res.data.errors) {\n          setErrors(res.data.errors);\n        } // Clears input fields\n        else {\n          setName(\"\");\n          setType(\"\");\n          setDescription(\"\");\n          setSkillOne(\"\");\n          setSkillTwo(\"\");\n          setSkillThree(\"\");\n          setErrors(\"\");\n          history.push(\"/\");\n        }\n      }).catch(err => console.log(err));\n      console.log(image);\n      console.log(cloudinary_id);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        backgroundImage: `url(${background})`,\n        backgroundRepeat: 'repeat',\n        marginTop: '60px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: '40px',\n            marginBottom: '20px',\n            fontWeight: 'bold'\n          },\n          children: \"Know a pet in need of a good home?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          style: {\n            width: '600px',\n            padding: 20,\n            marginBottom: '100px',\n            backgroundColor: \"rgb(247 247 247 / 87%)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: onSubmitHandler,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-between',\n                columnGap: '80px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: \"Pet Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Pet Name\",\n                type: \"text\",\n                variant: \"filled\",\n                fullWidth: true,\n                onChange: event => setName(event.target.value),\n                value: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"danger\",\n                children: errors.name ? errors.name.message : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Pet Type\",\n                type: \"text\",\n                variant: \"filled\",\n                fullWidth: true,\n                onChange: event => setType(event.target.value),\n                value: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"danger\",\n                children: errors.type ? errors.type.message : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Pet Description\",\n                type: \"text\",\n                variant: \"filled\",\n                multiline: true,\n                rows: 4,\n                fullWidth: true,\n                onChange: event => setDescription(event.target.value),\n                value: description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"danger\",\n                children: errors.description ? errors.description.message : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: [\"Pet Skills \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'grey'\n                  },\n                  children: \"(Optional)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 78\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Skill One\",\n                type: \"text\",\n                variant: \"filled\",\n                fullWidth: true,\n                onChange: event => setSkillOne(event.target.value),\n                value: skillOne\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Skill Two\",\n                type: \"text\",\n                variant: \"filled\",\n                fullWidth: true,\n                onChange: event => setSkillTwo(event.target.value),\n                value: skillTwo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Skill Three\",\n                type: \"text\",\n                variant: \"filled\",\n                fullWidth: true,\n                onChange: event => setSkillThree(event.target.value),\n                value: skillThree\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"image\",\n                name: \"image\",\n                onChange: handleOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: file,\n                  alt: \"Preview\",\n                  style: {\n                    width: '200px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  href: \"/\",\n                  variant: \"text\",\n                  style: {\n                    color: 'grey'\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  style: {\n                    backgroundColor: 'rgb(248, 181, 161)',\n                    width: '140px'\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 37\n                }, this), spinner ? spinner : /*#__PURE__*/_jsxDEV(Backdrop, {\n                  style: {\n                    color: '#fff'\n                  },\n                  open: true,\n                  children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    color: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PetForm, \"ODEULtJ7we6/WVN+EISIPx6cy7A=\", false, function () {\n  return [useHistory];\n});\n\n_c = PetForm;\nexport default PetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetForm\");","map":{"version":3,"sources":["/Users/jamesmalone/Documents/Coding Stuff/Personal Projects/petShelter/client/src/components/Form/PetForm.jsx"],"names":["axios","React","useState","useHistory","background","Button","TextField","Paper","CircularProgress","Backdrop","FormNav","Footer","PetForm","props","name","setName","type","setType","description","setDescription","skillOne","setSkillOne","skillTwo","setSkillTwo","skillThree","setSkillThree","file","setFile","image","setImage","cloudinary_id","setCloudinary_id","errors","setErrors","spinner","setSpinner","history","handleOnChange","event","reader","FileReader","onload","onLoadEvent","target","result","readAsDataURL","files","onSubmitHandler","preventDefault","formData","FormData","append","post","imageData","data","secure_url","public_id","then","res","console","log","push","catch","err","display","justifyContent","backgroundImage","backgroundRepeat","marginTop","marginBottom","fontWeight","width","padding","backgroundColor","flexDirection","columnGap","textAlign","value","message","color"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport background from \"../assets/petBackground.png\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { Paper } from '@mui/material';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Backdrop from '@mui/material/Backdrop';\nimport FormNav from '../Nav/FormNav';\nimport Footer from '../Footer/footer';\n\n\nconst PetForm = (props) => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skillOne, setSkillOne] = useState(\"\");\n    const [skillTwo, setSkillTwo] = useState(\"\");\n    const [skillThree, setSkillThree] = useState(\"\");\n    const [file, setFile] = useState(null);\n    const [image, setImage] = useState(null);\n    const [cloudinary_id, setCloudinary_id] = useState(null);\n    const [errors, setErrors] = useState({});\n    const [spinner, setSpinner] = useState(true);\n    const history = useHistory();\n\n\n    // Handles image preview\n    const handleOnChange = (event) => {\n        const reader = new FileReader();\n        reader.onload = function (onLoadEvent) {\n            setFile(onLoadEvent.target.result);\n            setImage(null)\n            setCloudinary_id(null)\n        }\n        reader.readAsDataURL(event.target.files[0]);\n    }\n\n\n    //handler when the form is submitted\n    const onSubmitHandler = async (event) => {\n        event.preventDefault();\n        \n        // Checks if user uploaded a file\n        // If user did upload a file, it POSTs both Axios calls\n        if (file != null) {\n            // Starts spinner\n            setSpinner(false)\n            // Sets up image to be sent to Cloudinary\n            const formData = new FormData();\n            formData.append('file', file)\n            formData.append('upload_preset', 'petShelter')\n            // Uploading the image to Cloudinary\n            const result = await axios.post('https://api.cloudinary.com/v1_1/jamescloudinaryforphotos/upload', formData)\n\n            // Packages data to send into database\n            const imageData = {\n                image: result.data.secure_url,\n                cloudinary_id: result.data.public_id\n            }\n\n            // Sends all data to database\n            axios.post('http://localhost:8000/api/pets/new', {\n                name,\n                type,\n                description,\n                skillOne,\n                skillTwo,\n                skillThree,\n                ...imageData\n            })\n                // console.log(imageData)\n                // Displays validiations\n                .then(res => {\n                    console.log(res)\n                    if (res.data.errors) {\n                        setErrors(res.data.errors)\n                    }\n                    // Clears input fields\n                    else {\n                        setName(\"\")\n                        setType(\"\")\n                        setDescription(\"\")\n                        setSkillOne(\"\")\n                        setSkillTwo(\"\")\n                        setSkillThree(\"\")\n                        setErrors(\"\")\n                        history.push(\"/\")\n                    }\n                })\n                .catch(err => console.log(err))\n                // Stops spinner\n                setSpinner(true)\n\n            // If user did NOT upload file, it only POSTs the following Axios call\n        } else {\n            // Sends all data to database\n            axios.post('http://localhost:8000/api/pets/new', {\n                name,\n                type,\n                description,\n                skillOne,\n                skillTwo,\n                skillThree\n            })\n                // Displays validiations\n                .then(res => {\n                    console.log(res)\n                    if (res.data.errors) {\n                        setErrors(res.data.errors)\n                    }\n                    // Clears input fields\n                    else {\n                        setName(\"\")\n                        setType(\"\")\n                        setDescription(\"\")\n                        setSkillOne(\"\")\n                        setSkillTwo(\"\")\n                        setSkillThree(\"\")\n                        setErrors(\"\")\n                        history.push(\"/\")\n                    }\n                })\n                .catch(err => console.log(err))\n            console.log(image)\n            console.log(cloudinary_id)\n        }\n    }\n\n\n    return (\n        <div>\n            <FormNav />\n            <div style={{\n                display: 'flex',\n                justifyContent: 'center',\n                backgroundImage: `url(${background})`,\n                backgroundRepeat: 'repeat',\n                marginTop: '60px',\n            }}>\n                <div>\n                    <h3 style={{ marginTop: '40px', marginBottom: '20px', fontWeight: 'bold' }}>Know a pet in need of a good home?</h3>\n                    <Paper\n                        elevation={2}\n                        style={{\n                            width: '600px',\n                            padding: 20,\n                            marginBottom: '100px',\n                            backgroundColor: \"rgb(247 247 247 / 87%)\"\n                        }}>\n                        <form onSubmit={onSubmitHandler}>\n                            <div style={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                justifyContent: 'space-between',\n                                columnGap: '80px'\n                            }} >\n                                <h5 style={{ textAlign: 'left' }}>Pet Information</h5>\n                                <TextField\n                                    label=\"Pet Name\"\n                                    type=\"text\"\n                                    variant=\"filled\"\n                                    fullWidth\n                                    onChange={(event) => setName(event.target.value)} value={name} />\n                                <p className='danger'>{errors.name ? errors.name.message : \"\"}</p>\n                                <TextField\n                                    label=\"Pet Type\"\n                                    type=\"text\" variant=\"filled\"\n                                    fullWidth\n                                    onChange={(event) => setType(event.target.value)} value={type} />\n                                <p className='danger'>{errors.type ? errors.type.message : \"\"}</p>\n                                <TextField\n                                    label=\"Pet Description\"\n                                    type=\"text\"\n                                    variant=\"filled\"\n                                    multiline\n                                    rows={4}\n                                    fullWidth\n                                    onChange={(event) => setDescription(event.target.value)} value={description} />\n                                <p className='danger'>{errors.description ? errors.description.message : \"\"}</p>\n                                <hr />\n                                <h5 style={{ textAlign: 'left' }}>Pet Skills <span style={{ color: 'grey' }} >(Optional)</span></h5>\n                                <TextField\n                                    label=\"Skill One\"\n                                    type=\"text\"\n                                    variant=\"filled\"\n                                    fullWidth\n                                    onChange={(event) => setSkillOne(event.target.value)} value={skillOne} />\n                                <p></p>\n                                <TextField\n                                    label=\"Skill Two\"\n                                    type=\"text\"\n                                    variant=\"filled\"\n                                    fullWidth\n                                    onChange={(event) => setSkillTwo(event.target.value)} value={skillTwo} />\n                                <p></p>\n                                <TextField\n                                    label=\"Skill Three\"\n                                    type=\"text\"\n                                    variant=\"filled\"\n                                    fullWidth\n                                    onChange={(event) => setSkillThree(event.target.value)} value={skillThree} />\n                                <p></p>\n\n                                <input\n                                    type=\"file\"\n                                    id=\"image\"\n                                    name=\"image\"\n                                    onChange={handleOnChange}\n                                />\n                                <br></br>\n\n                                {/* Add if statement so it doesnt show preview alt text */}\n                                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                                    <img src={file} alt=\"Preview\" style={{ width: '200px' }} />\n                                </div>\n\n\n                                <br></br>\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <Button\n                                        href=\"/\"\n                                        variant=\"text\"\n                                        style={{ color: 'grey' }}>Cancel\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        style={{ backgroundColor: 'rgb(248, 181, 161)', width: '140px' }}>Submit\n                                    </Button>\n                                    {spinner ? spinner : <Backdrop style={{ color: '#fff', }}  open>\n                                        <CircularProgress color=\"inherit\" />\n                                    </Backdrop>}\n                                </div>\n                            </div>\n                        </form>\n                    </Paper>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default PetForm;"]},"metadata":{},"sourceType":"module"}