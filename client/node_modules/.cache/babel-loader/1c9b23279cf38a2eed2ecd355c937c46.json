{"ast":null,"code":"var _jsxFileName = \"/Users/jamesmalone/Documents/Coding Stuff/Personal Projects/petShelter/client/src/components/loginAndReg/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = props => {\n  _s();\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const history = useHistory();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios.post('http://localhost:8000/api/register/user', {\n      firstName,\n      lastName,\n      email,\n      password,\n      confirmPassword\n    }, {\n      withCredentials: true\n    }) // withCreditials is needed for JWT/Cookies\n    // Displays validiations\n    .then(res => {\n      console.log(res);\n\n      if (res.data.errors) {\n        setErrors(res.data.errors);\n      } // Clears input fields\n      else {\n        setFirstName(\"\");\n        setLastName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n        setErrors(\"\");\n        history.push(\"/dashboard\");\n      }\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontWeight: 'bold',\n        marginTop: 10\n      },\n      children: \"Motorsports Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 5,\n        style: {\n          padding: 15,\n          backgroundColor: \"rgb(247 247 247 / 87%)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            noValidate: true,\n            onSubmit: handleSubmit,\n            sx: {\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  autoComplete: \"given-name\",\n                  name: \"firstName\",\n                  required: true,\n                  fullWidth: true,\n                  id: \"firstName\",\n                  label: \"First Name\",\n                  autoFocus: true,\n                  onChange: event => setFirstName(event.target.value),\n                  value: firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-danger\",\n                  children: errors.firstName ? errors.firstName.message : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  id: \"lastName\",\n                  label: \"Last Name\",\n                  name: \"lastName\",\n                  autoComplete: \"family-name\",\n                  onChange: event => setLastName(event.target.value),\n                  value: lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-danger\",\n                  children: errors.lastName ? errors.lastName.message : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  id: \"email\",\n                  label: \"Email Address\",\n                  name: \"email\",\n                  autoComplete: \"email\",\n                  onChange: event => setEmail(event.target.value),\n                  value: email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-danger\",\n                  children: errors.email ? errors.email.message : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  name: \"password\",\n                  label: \"Password\",\n                  type: \"password\",\n                  id: \"password\",\n                  autoComplete: \"new-password\",\n                  onChange: event => setPassword(event.target.value),\n                  value: password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-danger\",\n                  children: errors.password ? errors.password.message : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  name: \"confirmPassword\",\n                  label: \"Confirm Password\",\n                  type: \"password\",\n                  id: \"confirmPassword\",\n                  autoComplete: \"new-password\",\n                  onChange: event => setConfirmPassword(event.target.value),\n                  value: confirmPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-danger\",\n                  children: errors.confirmPassword ? errors.confirmPassword.message : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"flex-end\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"/login\",\n                  variant: \"body2\",\n                  children: \"Already have an account? Sign in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"BFpYrEvvCXMZZjl8NRrerCS432I=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/jamesmalone/Documents/Coding Stuff/Personal Projects/petShelter/client/src/components/loginAndReg/Register.jsx"],"names":["axios","React","useState","useHistory","Button","CssBaseline","TextField","Link","Grid","Box","Typography","Container","Paper","Register","props","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","history","handleSubmit","event","preventDefault","post","withCredentials","then","res","console","log","data","push","catch","err","fontWeight","marginTop","mt","padding","backgroundColor","display","flexDirection","alignItems","target","value","message","mb"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { Paper } from '@mui/material';\n\n\n\nconst Register = (props) => {\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [errors, setErrors] = useState({});\n    const history = useHistory();\n    \n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        axios.post('http://localhost:8000/api/register/user', {\n            firstName,\n            lastName,\n            email,\n            password,\n            confirmPassword\n        }, {withCredentials:true}) // withCreditials is needed for JWT/Cookies\n            // Displays validiations\n            .then(res => {\n                console.log(res)\n                if (res.data.errors) {\n                    setErrors(res.data.errors)\n                }\n                // Clears input fields\n                else {\n                    setFirstName(\"\")\n                    setLastName(\"\")\n                    setEmail(\"\")\n                    setPassword(\"\")\n                    setConfirmPassword(\"\")\n                    setErrors(\"\")\n                    history.push(\"/dashboard\")\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <div>\n            <h1 style={{ fontWeight: 'bold', marginTop: 10 }}>Motorsports Manager</h1>\n                <Container component=\"main\" maxWidth=\"xs\" sx={{ mt: 2 }}>\n                    <Paper elevation={5} style={{padding: 15, backgroundColor: \"rgb(247 247 247 / 87%)\"}}>\n                        <CssBaseline />\n                        <Box\n                            sx={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Typography component=\"h1\" variant=\"h5\">\n                                Register\n                            </Typography>\n                            <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            autoComplete=\"given-name\"\n                                            name=\"firstName\"\n                                            required\n                                            fullWidth\n                                            id=\"firstName\"\n                                            label=\"First Name\"\n                                            autoFocus\n                                            onChange={(event) => setFirstName(event.target.value)} value={firstName}\n                                        />\n                                        <p className='text-danger'>{errors.firstName ? errors.firstName.message : \"\"}</p>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"lastName\"\n                                            label=\"Last Name\"\n                                            name=\"lastName\"\n                                            autoComplete=\"family-name\"\n                                            onChange={(event) => setLastName(event.target.value)} value={lastName}\n                                        />\n                                        <p className='text-danger'>{errors.lastName ? errors.lastName.message : \"\"}</p>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"email\"\n                                            label=\"Email Address\"\n                                            name=\"email\"\n                                            autoComplete=\"email\"\n                                            onChange={(event) => setEmail(event.target.value)} value={email}\n                                        />\n                                        <p className='text-danger'>{errors.email ? errors.email.message : \"\"}</p>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            name=\"password\"\n                                            label=\"Password\"\n                                            type=\"password\"\n                                            id=\"password\"\n                                            autoComplete=\"new-password\"\n                                            onChange={(event) => setPassword(event.target.value)} value={password}\n                                        />\n                                        <p className='text-danger'>{errors.password ? errors.password.message : \"\"}</p>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            name=\"confirmPassword\"\n                                            label=\"Confirm Password\"\n                                            type=\"password\"\n                                            id=\"confirmPassword\"\n                                            autoComplete=\"new-password\"\n                                            onChange={(event) => setConfirmPassword(event.target.value)} value={confirmPassword}\n                                        />\n                                        <p className='text-danger'>{errors.confirmPassword ? errors.confirmPassword.message : \"\"}</p>\n                                    </Grid>\n                                </Grid>\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    sx={{ mt: 3, mb: 2 }}\n                                >\n                                    Sign Up\n                                </Button>\n                                <Grid container justifyContent=\"flex-end\">\n                                    <Grid item>\n                                        <Link href=\"/login\" variant=\"body2\">\n                                            Already have an account? Sign in\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                        </Box>\n                    </Paper>\n                </Container>\n        </div>\n    );\n}\nexport default Register;"]},"metadata":{},"sourceType":"module"}